<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ltm</string>
	</array>
	<key>name</key>
	<string>MoDL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\b(if|else|Where|where|elseif|Elseif|foreach|call|while|do|then|endif|endwhile|endforeach|in|If|ForEach|Endif|EndIf|While|Then|Else|Foreach|break|continue)\b</string>
			<key>name</key>
			<string>keyword.control.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(AND|WHERE|OR|and|where|or)\b</string>
			<key>name</key>
			<string>keyword.operator.modl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([A-Za-z_]+)(?:\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.modl</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\));*</string>
			<key>name</key>
			<string>meta.function.modl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#double_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_read</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vectors</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index_read</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#magic_words</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#data_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>(\/\/.*)</string>
			<key>name</key>
			<string>comment.line.double-slash.model</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.hexadecimal.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*))</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0[0-7]+)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(0[0-7]+)</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(((\d+(\.(?=[^a-zA-Z_])\d*)?|(?&lt;=[^0-9a-zA-Z_])\.\d+)(e[\-\+]?\d+)?))J)</string>
			<key>name</key>
			<string>constant.numeric.complex.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:([1-9]+[0-9]*|0)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.decimal.modl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.modl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_read</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_read_at</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#double_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_assign</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_comparison</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_markers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#vectors</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#index_read</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>data_types</key>
		<dict>
			<key>match</key>
			<string>\b(BOOL|FLOAT|INTEGER|DOUBLE|LONG|DATETIME|CHAR|NUMERIC|STRING|STRING20|STRING30|Bool|STR30| Float|Integer|Double|Long|Datetime|Char|String|String20|String30|OBJECT|OK|ON|OFF|ok|on|off)\b</string>
			<key>name</key>
			<string>support.function.modl</string>
		</dict>
		<key>double_string</key>
		<dict>
			<key>comment</key>
			<string>strings</string>
			<key>match</key>
			<string>(\".*?\")</string>
			<key>name</key>
			<string>string.quoted.double.modl</string>
		</dict>
		<key>index_read</key>
		<dict>
			<key>match</key>
			<string>(@?\w+)(?=\[\w)</string>
			<key>name</key>
			<string>storage.type.var.modl</string>
		</dict>
		<key>macro_markers</key>
		<dict>
			<key>match</key>
			<string>\b(macro|begin|endmacro|procedure|endprocedure)\b</string>
			<key>name</key>
			<string>keyword.control.modl</string>
		</dict>
		<key>magic_words</key>
		<dict>
			<key>match</key>
			<string>\b(TRUE|FALSE|True|False)\b</string>
			<key>name</key>
			<string>constant.language.modl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#data_types</string>
				</dict>
			</array>
		</dict>
		<key>variable_assign</key>
		<dict>
			<key>comment</key>
			<string>variable assignment with :=</string>
			<key>match</key>
			<string>(:=)</string>
			<key>name</key>
			<string>keyword.operator.modl</string>
		</dict>
		<key>variable_comparison</key>
		<dict>
			<key>comment</key>
			<string>variable comparisons</string>
			<key>match</key>
			<string>(=|&lt;=|&gt;=|&gt;|&lt;|!=)</string>
			<key>name</key>
			<string>keyword.operator.modl</string>
		</dict>
		<key>variable_read</key>
		<dict>
			<key>match</key>
			<string>\b(?&lt;=@)(\w+)\b</string>
			<key>name</key>
			<string>variable.other.modl</string>
		</dict>
		<key>variable_read_at</key>
		<dict>
			<key>match</key>
			<string>(@\w+)</string>
			<key>name</key>
			<string>variable.parameter.modl</string>
		</dict>
		<key>vectors</key>
		<dict>
			<key>match</key>
			<string>(@?\w+)(?=\.\w+)</string>
			<key>name</key>
			<string>storage.type.var.modl</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.modl</string>
	<key>uuid</key>
	<string>6e494553-70c6-4e24-adfe-d0fa3ac61bec</string>
</dict>
</plist>
